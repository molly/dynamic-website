doctype xml
feed(xmlns="http://www.w3.org/2005/Atom" xmlns:webfeeds="http://webfeeds.org/rss/1.0")
  id=`https://www.mollywhite.net/${path}/feed.xml`
  title(type="text") #{title}
  author
    name Molly White 
    email molly@mollywhite.net
    uri https://www.mollywhite.net
  link(rel="self" href=`https://mollywhite.net/reading/${path}/feed.xml`)
  link(rel="alternate" href=`https://mollywhite.net/${path}`)
  icon https://mollywhite.net/assets/images/icons/apple-touch-icon.png
  logo https://www.mollywhite.net/assets/images/molly_illustration.png
  webfeeds:icon https://www.mollywhite.net/assets/images/molly_illustration.png
  webfeeds:cover(image="https://www.mollywhite.net/assets/images/molly_illustration_social.png")
  webfeeds:accentColor 5948a4
  updated #{toISOWithoutMillis(lastUpdated)}
  rights(type="html")= 'Copyright Â© Molly White ' + new Date().getFullYear() + '.'

  each entry, index in entries
    -
      var url;
      var title;
      if (entry.__t === 'FeedEntryMicro') {
        url = `https://www.mollywhite.net/micro/entry/${entry.micro.slug}`;
        title = entry.micro.title;
      }
      else if (entry.__t === "MicroEntry") {
        url = `https://www.mollywhite.net/micro/entry/${entry.slug}`;
        title = entry.title;
      } else if (entry.__t === 'FeedEntryReading') {
        var type = entry.shortform ? 'shortform' : 'blockchain';
        url = `https://www.mollywhite.net/reading/${type}?search=${encodeURIComponent(entry[type].title)}`;
        title = `Read "${entry[type].title}"`;
      } else if (entry.__t === 'FeedEntryCitationNeeded') {
        url = `https://citationneeded.news/${entry.slug}`;
        title = `Published on Citation Needed: "${entry.title}"`;
      }
      if (!title) {
        title = `Note published on ${entry.timestamps.createdAt.absoluteTimeET}`;
      }
    entry
      title(type="html") #{title}
      link(href=url, type="text/html", rel="alternate", title=entry.title)
      published= toISOWithoutMillis(entry.createdAt)
      updated= toISOWithoutMillis(entry.updatedAt)
      id #{entry._id}
      content(type="html")
        = entry.html
      if entry.tags
        each tag in entry.tags 
          category(term=tag.value, label=tag.text)
